create table author
(au_id number(5) primary key,
au_f_name varchar2(20),
au_l_name varchar2(20),
au_dob date,
au_address varchar2(20)
);

insert all
into author values(1,'raj','deshpande','22-jan-15','jpnagar,bang')
into author values(2,'arun','patil','03-mar-15','rrnagar,bang')
into author values(3,'ritesh','deshmukh','28-sep-15','kalyannagar,bang')
into author values(4,'arjun','janya','19-oct-15','jaynagar,bang')
into author values(5,'kiran','sharma','17-nov-15','tnagar,bang')
select * from dual;

create table publisher
(pub_id number(5) primary key,
pub_nm varchar2(20), 
pub_address varchar2(20),
pub_city varchar2(20),
pub_state varchar2(20)
);

insert all
into publisher values(1101,'abc publications','ring road','bangalore','karnataka')
into publisher values(1102,'pqr publications','south end','bangalore','karnataka')
into publisher values(1103,'xyz publications','kr circle','bangalore','karnataka')
into publisher values(1104,'rrr publications','rr road','bangalore','karnataka')
into publisher values(1105,'lmn publications','dk circle','bangalore','karnataka')
into publisher values(1106,'zzz publications','kr puram','bangalore','karnataka')
select * from dual;
INSERT into publisher values(1107,'SK publications','kr puram','erode','tamilnadu');

create table book
(book_id number(5) primary key,
book_nm varchar2(20),
pub_id number(5) references publisher(pub_id));

insert all
into book values(11,'cartoon books',1101)
into book values(12,'story books',1101)
into book values(13,'adventures books',1102)
into book values(14,'novel books',1101)
into book values(15,'thriller books',1103)
into book values(16,'horror books',1102)
select * from dual;

create table book_author
(bk_au_id number(5) primary key,
book_id number(5) references book(book_id),
au_id number(5) references author(au_id)
);

insert all
into book_author values(111,14,1)
into book_author values(222,12,1)
into book_author values(333,11,2)
into book_author values(444,11,3)
into book_author values(555,11,2)
into book_author values(666,14,2)
select * from dual;

COMMIT;

SELECT * FROM AUTHOR;
SELECT * FROM PUBLISHER;
SELECT * FROM BOOK;
SELECT * FROM BOOK_AUTHOR;

--1.	Identify the relationships between each table.
--AUTHOR -> BOOK_AUTHOR (1 TO MANY)
--AUTHOR -> BOOK  (MANY TO MANY)
--PUBLISHER -> BOOK (1 TO MANY)

--2.	Query to get the number of books by each publisher.
SELECT PUB_NM,COUNT(BOOK_ID)NO_OF_BOOKS
    FROM BOOK B,PUBLISHER P
    WHERE B.PUB_ID=P.PUB_ID
    GROUP BY PUB_NM;
    
--3.	Write a query which gives book_name, author_name for publisher ‘XYZ’
SELECT AU_F_NAME,BOOK_NM
        FROM BOOK B,PUBLISHER P,AUTHOR A,BOOK_AUTHOR K
        WHERE B.PUB_ID=P.PUB_ID AND A.AU_ID(+)=K.AU_ID 
        and B.BOOK_ID=K.BOOK_ID(+)
        AND PUB_NM='xyz publications';

--4.	Which book was written by more than 3 authors?
SELECT BOOK_NM
FROM BOOK
WHERE BOOK_ID IN (SELECT BOOK_ID
                FROM BOOK_AUTHOR
                GROUP BY BOOK_ID
                HAVING COUNT(AU_ID)>2);
                
--5.	Want to include city and state information of author as well in the model. 
--  So, modifiy the model and show us the new model what you come up with.

-- 6.	Display publisher name, pub_city and metro flag of the city. 
--If city is CHN or MUM or DEL or CAL then display the flag as ‘Y’ otherwise ‘N’
SELECT PUB_NM,PUB_CITY,CASE WHEN PUB_CITY='bangalore' THEN 'Y'
                            WHEN PUB_CITY='chennai' THEN 'Y'
                            WHEN PUB_CITY='delhi' then 'y'
                        ELSE 'N' 
                        END METRO_FLAG
FROM PUBLISHER;

--7.	Display the authors whose age is greater than the author ‘RAM KUMAR’
SELECT AU_F_NAME||AU_L_NAME
    FROM AUTHOR
    WHERE TRUNC(SYSDATE-AU_DOB)/365 > (SELECT TRUNC(SYSDATE-AU_DOB)/365 AGE 
                                        FROM AUTHOR
                                        WHERE AU_F_NAME||AU_L_NAME='rajdeshpande');
SELECT TRUNC(SYSDATE)FROM DUAL;

--8.	Display the publisher name, author_name and no of books they wrote.
SELECT PUB_NM,AU_F_NAME,BOOK
FROM (SELECT AU_F_NAME,COUNT(BOOK_ID)BOOK
    FROM AUTHOR A,BOOK_AUTHOR B
    WHERE A.AU_ID=B.AU_ID
    GROUP BY AU_F_NAME)R,PUBLISHER P,BOOK B1
WHERE R.BOOK_ID = B1.BOOK_ID AND P.PUB_ID=B1.PUB_ID;

    
--9.	Which author wrote the maximum number of books?
SELECT AU_F_NAME||AU_L_NAME
FROM (SELECT AU_ID,COUNT(BOOK_ID),DENSE_RANK() OVER
    (ORDER BY COUNT(BOOK_ID) DESC)R
    FROM BOOK_AUTHOR
    GROUP BY AU_ID)S,AUTHOR A
WHERE S.AU_ID=A.AU_ID
AND R=1;

--10.	Create a stored procedure which returns book_name, author_full_name by 
--taking publisher name as the input.

CREATE OR REPLACE PROCEDURE SP_BOOK(V_PUB PUBLISHER.PUB_NM%TYPE)AS
B_NAME BOOK.BOOK_NM%TYPE;
A_NAME AUTHOR.AU_F_NAME%TYPE;
F_NAME AUTHOR.AU_L_NAME%TYPE;
BEGIN
SELECT AU_F_NAME,AU_L_NAME,BOOK_NM INTO A_NAME,F_NAME,B_NAME
        FROM BOOK B,PUBLISHER P,AUTHOR A,BOOK_AUTHOR K
        WHERE B.PUB_ID=P.PUB_ID AND A.AU_ID(+)=K.AU_ID 
        and B.BOOK_ID=K.BOOK_ID(+)
        AND PUB_NM=V_PUB;
DBMS_OUTPUT.PUT_LINE(A_NAME||F_NAME||'  '||B_NAME);
EXCEPTION
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('INVALID');
WHEN TOO_MANY_ROWS THEN
DBMS_OUTPUT.PUT_LINE('TO MANY ROWS');
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE(SQLCODE||','||SQLERRM);
END;


EXEC SP_BOOK('abc publications');

EXEC SP_BOOK('xyz publications');

EXEC SP_BOOK('dadf publications');

set serveroutput on;

--11.	Take the publisher name as input and give the number of books 
--which that publisher published where there are only one author.
--CREATE OR REPLACE PROCEDURE SP_BK(P_NAME PUBLISHER.PUB_NM%TYPE)AS

SELECT COUNT(BOOK_ID)
FROM BOOK_AUTHOR
WHERE BOOK_ID IN (SELECT BOOK_ID
                    FROM BOOK_AUTHOR
                    GROUP BY BOOK_ID
                    HAVING COUNT(AU_ID)=1);
                
